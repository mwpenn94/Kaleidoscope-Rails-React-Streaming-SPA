{"ast":null,"code":"import scopes from '../apiServer/scopes'; //import history from '../history';\n\nimport { SIGN_IN, SIGN_OUT, CREATE_SCOPE, FETCH_SCOPES, FETCH_SCOPE, DELETE_SCOPE, EDIT_SCOPE } from './types'; //Action Creator signIn\n\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n}; //Action Creator signOut\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n}; //Action Creator createScope\n\nexport const createScope = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await scopes.post('/scopes', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_SCOPE,\n    payload: response.data\n  }); // Programmatic navigation to get the user back to root route\n\n  history.push('/');\n}; //Action Creator fetchScopes\n\nexport const fetchScopes = () => async dispatch => {\n  const response = await scopes.get('/scopes');\n  dispatch({\n    type: FETCH_SCOPES,\n    payload: response.data\n  });\n}; //Action Creator fetchScope\n\nexport const fetchScope = id => async dispatch => {\n  const response = await scopes.get(`/scopes/${id}`);\n  dispatch({\n    type: FETCH_SCOPE,\n    payload: response.data\n  });\n}; //Action Creator editScope\n\nexport const editScope = (id, formValues) => async dispatch => {\n  const response = await scopes.patch(`/scopes/${id}`, formValues);\n  dispatch({\n    type: EDIT_SCOPE,\n    payload: response.data\n  });\n  history.push('/'); //Navigate user back to homepage\n}; //Action Creator deleteScope\n\nexport const deleteScope = id => async dispatch => {\n  await scopes.delete(`/scopes/${id}`);\n  dispatch({\n    type: DELETE_SCOPE,\n    payload: id\n  });\n  history.push('/'); //Navigate user back to homepage \n};","map":{"version":3,"sources":["/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/kaleidoscope/src/actions/index.js"],"names":["scopes","SIGN_IN","SIGN_OUT","CREATE_SCOPE","FETCH_SCOPES","FETCH_SCOPE","DELETE_SCOPE","EDIT_SCOPE","signIn","userId","type","payload","signOut","createScope","formValues","dispatch","getState","auth","response","post","data","history","push","fetchScopes","get","fetchScope","id","editScope","patch","deleteScope","delete"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB,C,CACA;;AACA,SACIC,OADJ,EAEIC,QAFJ,EAGIC,YAHJ,EAIIC,YAJJ,EAKIC,WALJ,EAMIC,YANJ,EAOIC,UAPJ,QAQO,SARP,C,CAUA;;AACA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAET,OADH;AAEHU,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMW,WAAW,GAAGC,UAAU,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnE,QAAM;AAAEP,IAAAA;AAAF,MAAaO,QAAQ,GAAGC,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMlB,MAAM,CAACmB,IAAP,CAAY,SAAZ,EAAuB,EAAC,GAAGL,UAAJ;AAAgBL,IAAAA;AAAhB,GAAvB,CAAvB;AAEAM,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEP,YAAP;AAAqBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR,CAJmE,CAKnE;;AACAC,EAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACH,CAPM,C,CASP;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAMR,QAAN,IAAkB;AAC/C,QAAMG,QAAQ,GAAG,MAAMlB,MAAM,CAACwB,GAAP,CAAW,SAAX,CAAvB;AAEAT,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEN,YAAP;AAAqBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACH,CAJM,C,CAMP;;AACA,OAAO,MAAMK,UAAU,GAAGC,EAAE,IAAI,MAAMX,QAAN,IAAkB;AAC9C,QAAMG,QAAQ,GAAG,MAAMlB,MAAM,CAACwB,GAAP,CAAY,WAAUE,EAAG,EAAzB,CAAvB;AAEAX,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEL,WAAP;AAAoBM,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACH,CAJM,C,CAMP;;AACA,OAAO,MAAMO,SAAS,GAAG,CAACD,EAAD,EAAKZ,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC3D,QAAMG,QAAQ,GAAG,MAAMlB,MAAM,CAAC4B,KAAP,CAAc,WAAUF,EAAG,EAA3B,EAA8BZ,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEH,UAAP;AAAmBI,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAArC,GAAD,CAAR;AACAC,EAAAA,OAAO,CAACC,IAAR,CAAa,GAAb,EAJ2D,CAIvC;AACvB,CALM,C,CAOP;;AACA,OAAO,MAAMO,WAAW,GAAGH,EAAE,IAAI,MAAMX,QAAN,IAAkB;AAC/C,QAAMf,MAAM,CAAC8B,MAAP,CAAe,WAAUJ,EAAG,EAA5B,CAAN;AAEAX,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEJ,YAAP;AAAqBK,IAAAA,OAAO,EAAEe;AAA9B,GAAD,CAAR;AACAL,EAAAA,OAAO,CAACC,IAAR,CAAa,GAAb,EAJ+C,CAI3B;AACvB,CALM","sourcesContent":["import scopes from '../apiServer/scopes';\r\n//import history from '../history';\r\nimport {\r\n    SIGN_IN,\r\n    SIGN_OUT,\r\n    CREATE_SCOPE,\r\n    FETCH_SCOPES,\r\n    FETCH_SCOPE,\r\n    DELETE_SCOPE,\r\n    EDIT_SCOPE \r\n} from './types';\r\n\r\n//Action Creator signIn\r\nexport const signIn = userId => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    }\r\n}\r\n\r\n//Action Creator signOut\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    }\r\n}\r\n\r\n//Action Creator createScope\r\nexport const createScope = formValues => async (dispatch, getState) => {\r\n    const { userId } = getState().auth;\r\n    const response = await scopes.post('/scopes', {...formValues, userId });\r\n\r\n    dispatch({type: CREATE_SCOPE, payload: response.data})\r\n    // Programmatic navigation to get the user back to root route\r\n    history.push('/');\r\n}\r\n\r\n//Action Creator fetchScopes\r\nexport const fetchScopes = () => async dispatch => {\r\n    const response = await scopes.get('/scopes');\r\n\r\n    dispatch({type: FETCH_SCOPES, payload: response.data})\r\n}\r\n\r\n//Action Creator fetchScope\r\nexport const fetchScope = id => async dispatch => {\r\n    const response = await scopes.get(`/scopes/${id}`);\r\n\r\n    dispatch({type: FETCH_SCOPE, payload: response.data})\r\n}\r\n\r\n//Action Creator editScope\r\nexport const editScope = (id, formValues) => async dispatch => {\r\n    const response = await scopes.patch(`/scopes/${id}`, formValues);\r\n\r\n    dispatch({type: EDIT_SCOPE, payload: response.data})\r\n    history.push('/');  //Navigate user back to homepage\r\n}\r\n\r\n//Action Creator deleteScope\r\nexport const deleteScope = id => async dispatch => {\r\n    await scopes.delete(`/scopes/${id}`);\r\n\r\n    dispatch({type: DELETE_SCOPE, payload: id})\r\n    history.push('/');  //Navigate user back to homepage \r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import scopes from '../apis/scopes';\nimport history from '../history';\nimport { SIGN_IN, SIGN_OUT, CREATE_SCOPE, FETCH_SCOPES, FETCH_SCOPE, DELETE_SCOPE, EDIT_SCOPE } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createScope = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await scopes.post('/scopes', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_SCOPE,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchScopes = () => async dispatch => {\n  const response = await scopes.get('/scopes');\n  dispatch({\n    type: FETCH_SCOPES,\n    payload: response.data\n  });\n};\nexport const fetchScope = id => async dispatch => {\n  const response = await scopes.get(`/scopes/${id}`);\n  dispatch({\n    type: FETCH_SCOPE,\n    payload: response.data\n  });\n};\nexport const editScope = (id, formValues) => async dispatch => {\n  const response = await scopes.patch(`/scopes/${id}`, formValues);\n  dispatch({\n    type: EDIT_SCOPE,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const deleteScope = id => async dispatch => {\n  await scopes.delete(`/scopes/${id}`);\n  dispatch({\n    type: DELETE_SCOPE,\n    payload: id\n  });\n  history.push('/');\n};","map":{"version":3,"sources":["/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/client/src/actions/index.js"],"names":["scopes","history","SIGN_IN","SIGN_OUT","CREATE_SCOPE","FETCH_SCOPES","FETCH_SCOPE","DELETE_SCOPE","EDIT_SCOPE","signIn","userId","type","payload","signOut","createScope","formValues","dispatch","getState","auth","response","post","data","push","fetchScopes","get","fetchScope","id","editScope","patch","deleteScope","delete"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,UAPF,QAQO,SARP;AAUA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAET,OADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMW,WAAW,GAAGC,UAAU,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACrE,QAAM;AAAEP,IAAAA;AAAF,MAAaO,QAAQ,GAAGC,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMnB,MAAM,CAACoB,IAAP,CAAY,SAAZ,EAAuB,EAAE,GAAGL,UAAL;AAAiBL,IAAAA;AAAjB,GAAvB,CAAvB;AAEAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,YAAR;AAAsBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACApB,EAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACD,CANM;AAQP,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAMP,QAAN,IAAkB;AACjD,QAAMG,QAAQ,GAAG,MAAMnB,MAAM,CAACwB,GAAP,CAAW,SAAX,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,YAAR;AAAsBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMI,UAAU,GAAGC,EAAE,IAAI,MAAMV,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMnB,MAAM,CAACwB,GAAP,CAAY,WAAUE,EAAG,EAAzB,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,WAAR;AAAqBM,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMM,SAAS,GAAG,CAACD,EAAD,EAAKX,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC7D,QAAMG,QAAQ,GAAG,MAAMnB,MAAM,CAAC4B,KAAP,CAAc,WAAUF,EAAG,EAA3B,EAA8BX,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEH,UAAR;AAAoBI,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACApB,EAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACD,CALM;AAOP,OAAO,MAAMO,WAAW,GAAGH,EAAE,IAAI,MAAMV,QAAN,IAAkB;AACjD,QAAMhB,MAAM,CAAC8B,MAAP,CAAe,WAAUJ,EAAG,EAA5B,CAAN;AAEAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,YAAR;AAAsBK,IAAAA,OAAO,EAAEc;AAA/B,GAAD,CAAR;AACAzB,EAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACD,CALM","sourcesContent":["import scopes from '../apis/scopes';\r\nimport history from '../history';\r\nimport {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_SCOPE,\r\n  FETCH_SCOPES,\r\n  FETCH_SCOPE,\r\n  DELETE_SCOPE,\r\n  EDIT_SCOPE\r\n} from './types';\r\n\r\nexport const signIn = userId => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n\r\nexport const createScope = formValues => async (dispatch, getState) => {\r\n  const { userId } = getState().auth;\r\n  const response = await scopes.post('/scopes', { ...formValues, userId });\r\n\r\n  dispatch({ type: CREATE_SCOPE, payload: response.data });\r\n  history.push('/');\r\n};\r\n\r\nexport const fetchScopes = () => async dispatch => {\r\n  const response = await scopes.get('/scopes');\r\n\r\n  dispatch({ type: FETCH_SCOPES, payload: response.data });\r\n};\r\n\r\nexport const fetchScope = id => async dispatch => {\r\n  const response = await scopes.get(`/scopes/${id}`);\r\n\r\n  dispatch({ type: FETCH_SCOPE, payload: response.data });\r\n};\r\n\r\nexport const editScope = (id, formValues) => async dispatch => {\r\n  const response = await scopes.patch(`/scopes/${id}`, formValues);\r\n\r\n  dispatch({ type: EDIT_SCOPE, payload: response.data });\r\n  history.push('/');\r\n};\r\n\r\nexport const deleteScope = id => async dispatch => {\r\n  await scopes.delete(`/scopes/${id}`);\r\n\r\n  dispatch({ type: DELETE_SCOPE, payload: id });\r\n  history.push('/');\r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/client/src/components/scopes/ScopeEdit.js\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchScope, editScope } from '../../actions';\nimport ScopeForm from './ScopeForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ScopeEdit extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = formValues => {\n      this.props.editScope(this.props.match.params.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchScope(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.scope) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit a Scope\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScopeForm, {\n        initialValues: _.pick(this.props.scope, 'title', 'description'),\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    scope: state.scopes[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchScope,\n  editScope\n})(ScopeEdit);","map":{"version":3,"sources":["/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/client/src/components/scopes/ScopeEdit.js"],"names":["_","React","connect","fetchScope","editScope","ScopeForm","ScopeEdit","Component","onSubmit","formValues","props","match","params","id","componentDidMount","render","scope","pick","mapStateToProps","state","ownProps","scopes"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,eAAtC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAKtCC,QALsC,GAK3BC,UAAU,IAAI;AACvB,WAAKC,KAAL,CAAWN,SAAX,CAAqB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C,EAAiDJ,UAAjD;AACD,KAPqC;AAAA;;AACtCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWP,UAAX,CAAsB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C;AACD;;AAMDE,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKL,KAAL,CAAWM,KAAhB,EAAuB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,aAAa,EAAEhB,CAAC,CAACiB,IAAF,CAAO,KAAKP,KAAL,CAAWM,KAAlB,EAAyB,OAAzB,EAAkC,aAAlC,CADjB;AAEE,QAAA,QAAQ,EAAE,KAAKR;AAFjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAvBqC;;AA0BxC,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEJ,IAAAA,KAAK,EAAEG,KAAK,CAACE,MAAN,CAAaD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAAnC;AAAT,GAAP;AACD,CAFD;;AAIA,eAAeX,OAAO,CACpBgB,eADoB,EAEpB;AAAEf,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAFoB,CAAP,CAGbE,SAHa,CAAf","sourcesContent":["import _ from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchScope, editScope } from '../../actions';\r\nimport ScopeForm from './ScopeForm';\r\n\r\nclass ScopeEdit extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchScope(this.props.match.params.id);\r\n  }\r\n\r\n  onSubmit = formValues => {\r\n    this.props.editScope(this.props.match.params.id, formValues);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.scope) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>Edit a Scope</h3>\r\n        <ScopeForm\r\n          initialValues={_.pick(this.props.scope, 'title', 'description')}\r\n          onSubmit={this.onSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { scope: state.scopes[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchScope, editScope }\r\n)(ScopeEdit);"]},"metadata":{},"sourceType":"module"}
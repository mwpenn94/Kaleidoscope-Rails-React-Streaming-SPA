{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/kaleidoscope/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; //import { signIn, signOut } from '../actions';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.Ab.El);\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      //Load OAuth Client from Google APIs\n      window.gapi.client.init({\n        //Initialize Google API Library with OAuth 'clientId'\n        clientId: '126153606708-7ntu60t8857upt6nlof5m2qqsognkrj4.apps.googleusercontent.com',\n        scope: 'https://mail.google.com/' //Specify client information we want to receive in scope\n\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      //when first loading\n      return null;\n    } else if (this.props.isSignedIn) {\n      //is true\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), \"Sign Out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this);\n    } else {\n      //is false\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), \"Sign In With Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth); //126153606708-7ntu60t8857upt6nlof5m2qqsognkrj4.apps.googleusercontent.com","map":{"version":3,"sources":["/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/kaleidoscope/src/components/GoogleAuth.js"],"names":["React","connect","GoogleAuth","Component","onAuthChange","isSignedIn","props","signIn","auth","currentUser","Ab","El","signOut","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","get","listen","renderAuthButton","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAcrCC,YAdqC,GActBC,UAAU,IAAI;AACzB,UAAIA,UAAJ,EAAgB;AACZ,aAAKC,KAAL,CAAWC,MAAX,CAAkB,KAAKC,IAAL,CAAUC,WAAV,CAAsBC,EAAtB,CAAyBC,EAA3C;AACH,OAFD,MAEO;AACH,aAAKL,KAAL,CAAWM,OAAX;AACH;AACJ,KApBoC;;AAAA,SAsBrCC,aAtBqC,GAsBrB,MAAM;AAClB,WAAKL,IAAL,CAAUD,MAAV;AACH,KAxBoC;;AAAA,SA0BrCO,cA1BqC,GA0BpB,MAAM;AACnB,WAAKN,IAAL,CAAUI,OAAV;AACH,KA5BoC;AAAA;;AACrCG,EAAAA,iBAAiB,GAAG;AACpBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AAAE;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AAAE;AACtBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE,0BAFa,CAEe;;AAFf,OAAxB,EAGOC,IAHP,CAGY,MAAM;AACV,aAAKf,IAAL,GAAYQ,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKrB,YAAL,CAAkB,KAAKI,IAAL,CAAUH,UAAV,CAAqBqB,GAArB,EAAlB;AACA,aAAKlB,IAAL,CAAUH,UAAV,CAAqBsB,MAArB,CAA4B,KAAKvB,YAAjC;AACH,OAPL;AAQC,KATL;AAUC;;AAkBDwB,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKtB,KAAL,CAAWD,UAAX,KAA0B,IAA9B,EAAoC;AAAG;AACnC,aAAO,IAAP;AACH,KAFD,MAEO,IAAI,KAAKC,KAAL,CAAWD,UAAf,EAA2B;AAAE;AAChC,0BACQ;AAAQ,QAAA,OAAO,EAAE,KAAKS,cAAtB;AACG,QAAA,SAAS,EAAC,sBADb;AAAA,gCAEA;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR;AAQH,KATM,MASA;AAAK;AACR,0BACQ;AAAQ,QAAA,OAAO,EAAE,KAAKD,aAAtB;AACG,QAAA,SAAS,EAAC,sBADb;AAAA,gCAEA;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR;AAOH;AACJ;;AAEDgB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,gBAAM,KAAKD,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAvDoC;;AA0DzC,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AAAE1B,IAAAA,UAAU,EAAE0B,KAAK,CAACvB,IAAN,CAAWH;AAAzB,GAAP;AACH,CAFD;;AAIA,eAAeJ,OAAO,CAAC6B,eAAD,EAAkB;AAACvB,EAAAA,MAAD;AAASK,EAAAA;AAAT,CAAlB,CAAP,CAA4CV,UAA5C,CAAf,C,CAEA","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n//import { signIn, signOut } from '../actions';\r\n\r\nclass GoogleAuth extends React.Component {\r\n    componentDidMount() {\r\n    window.gapi.load('client:auth2', () => { //Load OAuth Client from Google APIs\r\n        window.gapi.client.init({ //Initialize Google API Library with OAuth 'clientId'\r\n            clientId: '126153606708-7ntu60t8857upt6nlof5m2qqsognkrj4.apps.googleusercontent.com',\r\n            scope: 'https://mail.google.com/'  //Specify client information we want to receive in scope\r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                this.onAuthChange(this.auth.isSignedIn.get());\r\n                this.auth.isSignedIn.listen(this.onAuthChange);\r\n            })\r\n        })\r\n    }\r\n\r\n    onAuthChange = isSignedIn => {\r\n        if (isSignedIn) {\r\n            this.props.signIn(this.auth.currentUser.Ab.El);\r\n        } else { \r\n            this.props.signOut();\r\n        }\r\n    }\r\n\r\n    onSignInClick = () => {\r\n        this.auth.signIn();\r\n    }\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut();\r\n    }\r\n\r\n    renderAuthButton() {\r\n        if (this.props.isSignedIn === null) {  //when first loading\r\n            return null;\r\n        } else if (this.props.isSignedIn) { //is true\r\n            return (\r\n                    <button onClick={this.onSignOutClick}\r\n                       className=\"ui red google button\">\r\n                    <i className=\"google icon\" />\r\n                        Sign Out\r\n                    </button>\r\n            )\r\n            \r\n        } else {    //is false\r\n            return (\r\n                    <button onClick={this.onSignInClick}\r\n                       className=\"ui red google button\">\r\n                    <i className=\"google icon\" />\r\n                        Sign In With Google\r\n                    </button>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>{this.renderAuthButton()}</div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { isSignedIn: state.auth.isSignedIn }\r\n}\r\n\r\nexport default connect(mapStateToProps, {signIn, signOut})(GoogleAuth);\r\n\r\n//126153606708-7ntu60t8857upt6nlof5m2qqsognkrj4.apps.googleusercontent.com"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/backend/app/javascript/packs/Index.jsx\",\n    _this = this;\n\n// Run this example by adding <%= javascript_pack_tag 'hello_react' %> to the head of your layout file,\n// like app/views/layouts/application.html.erb. All it does is render <div>Hello React</div> at the bottom\n// of the page.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport App from '../src/components/App';\nimport reducers from '../src/reducers';\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  render( /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  })), document.body.appendChild(document.createElement(\"div\")));\n});","map":{"version":3,"sources":["/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/backend/app/javascript/packs/Index.jsx"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","compose","reduxThunk","App","reducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","document","addEventListener","render","body","appendChild","createElement"],"mappings":";;;AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,IAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CN,OAAxE;AACA,IAAMO,KAAK,GAAGT,WAAW,CACvBK,QADuB,EAEvBC,gBAAgB,CAACL,eAAe,CAACE,UAAD,CAAhB,CAFO,CAAzB;AAKAO,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClDC,EAAAA,MAAM,eACJ,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADI,EAIJC,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAA1B,CAJI,CAAN;AAMD,CAPD","sourcesContent":["// Run this example by adding <%= javascript_pack_tag 'hello_react' %> to the head of your layout file,\r\n// like app/views/layouts/application.html.erb. All it does is render <div>Hello React</div> at the bottom\r\n// of the page.\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from '../src/components/App';\r\nimport reducers from '../src/reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  render(\r\n    <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n    document.body.appendChild(document.createElement(\"div\"))\r\n  );\r\n});"]},"metadata":{},"sourceType":"module"}
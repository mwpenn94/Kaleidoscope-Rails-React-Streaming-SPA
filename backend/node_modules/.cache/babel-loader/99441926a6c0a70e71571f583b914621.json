{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/kaleidoscope/src/components/scopes/ScopeDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchScope, deleteScope } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ScopeDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchScope(this.props.match.params.id);\n  }\n\n  renderActions() {\n    const {\n      id\n    } = this.props.match.params;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.deleteScope(id),\n        className: \"ui button negative\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"ui button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderContent() {\n    if (!this.props.scope) {\n      return 'Are you sure you want to delete this scope?';\n    }\n\n    return `Are you sure you want to delete the scope with title: ${this.props.scope.title}`;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Delete Scope\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    scope: state.scopes[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchScope,\n  deleteScope\n})(ScopeDelete);","map":{"version":3,"sources":["/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/kaleidoscope/src/components/scopes/ScopeDelete.js"],"names":["React","connect","Link","Modal","history","fetchScope","deleteScope","ScopeDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","scope","title","render","push","mapStateToProps","state","ownProps","scopes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;;;AAEA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AACxCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,UAAX,CAAsB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,UAAM;AAAED,MAAAA;AAAF,QAAS,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AAEA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWJ,WAAX,CAAuBO,EAAvB,CADjB;AAEE,QAAA,SAAS,EAAC,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAEDE,EAAAA,aAAa,GAAG;AACd,QAAI,CAAC,KAAKL,KAAL,CAAWM,KAAhB,EAAuB;AACrB,aAAO,6CAAP;AACD;;AAED,WAAQ,yDACN,KAAKN,KAAL,CAAWM,KAAX,CAAiBC,KAClB,EAFD;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,OAAO,EAAE,KAAKH,aAAL,EAFX;AAGE,MAAA,OAAO,EAAE,KAAKD,aAAL,EAHX;AAIE,MAAA,SAAS,EAAE,MAAMV,OAAO,CAACe,IAAR,CAAa,GAAb;AAJnB;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA1CuC;;AA6C1C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEN,IAAAA,KAAK,EAAEK,KAAK,CAACE,MAAN,CAAaD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAAnC;AAAT,GAAP;AACD,CAFD;;AAIA,eAAeZ,OAAO,CACpBmB,eADoB,EAEpB;AAAEf,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAFoB,CAAP,CAGbC,WAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport { fetchScope, deleteScope } from '../../actions';\r\n\r\nclass ScopeDelete extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchScope(this.props.match.params.id);\r\n  }\r\n\r\n  renderActions() {\r\n    const { id } = this.props.match.params;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <button\r\n          onClick={() => this.props.deleteScope(id)}\r\n          className=\"ui button negative\"\r\n        >\r\n          Delete\r\n        </button>\r\n        <Link to=\"/\" className=\"ui button\">\r\n          Cancel\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderContent() {\r\n    if (!this.props.scope) {\r\n      return 'Are you sure you want to delete this scope?';\r\n    }\r\n\r\n    return `Are you sure you want to delete the scope with title: ${\r\n      this.props.scope.title\r\n    }`;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        title=\"Delete Scope\"\r\n        content={this.renderContent()}\r\n        actions={this.renderActions()}\r\n        onDismiss={() => history.push('/')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { scope: state.scopes[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchScope, deleteScope }\r\n)(ScopeDelete);"]},"metadata":{},"sourceType":"module"}
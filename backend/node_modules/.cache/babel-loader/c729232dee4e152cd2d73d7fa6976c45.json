{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/kaleidoscope/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.onSignIn(this.auth.currentUser.get().getId());\n      } else {\n        this.props.onSignOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n\n    this.renderAuthButton = () => {\n      if (this.props.isSignedIn === null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"IDK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 14\n        }, this);\n      } else if (this.props.isSignedIn) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onSignOutClick,\n          className: \"ui red google button\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"google icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this), \"Sign Out\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onSignInClick,\n          className: \"ui red google button\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"google icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), \"Sign In With Google\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this);\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      //Load OAuth Client from Google APIs\n      window.gapi.client.init({\n        //Initialize Google API Library with OAuth 'clientId'\n        clientId: '102675409019-bdjaie8900vv5ehus7qlmn896641k1es.apps.googleusercontent.com',\n        scope: 'email' //Specify client information we want to receive in scope\n\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignIn: id => {\n      dispatch(actions.signIn(id));\n    },\n    onSignOut: () => {\n      dispatch(actions.signOut());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GoogleAuth); //126153606708-j8nebi3oq2et374l4slmk1gghv6pq13p.apps.googleusercontent.com","map":{"version":3,"sources":["/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/kaleidoscope/src/components/GoogleAuth.js"],"names":["React","GoogleAuth","Component","state","isSignedIn","onAuthChange","props","onSignIn","auth","currentUser","get","getId","onSignOut","onSignInClick","signIn","onSignOutClick","signOut","renderAuthButton","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","render","mapStateToProps","mapDispatchToProps","dispatch","id","actions","connect"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass GoogleAuth extends React.Component {\r\nstate = {isSignedIn: null };\r\n\r\n    componentDidMount() {\r\n        window.gapi.load('client:auth2', () => { //Load OAuth Client from Google APIs\r\n            window.gapi.client.init({ //Initialize Google API Library with OAuth 'clientId'\r\n                clientId: '102675409019-bdjaie8900vv5ehus7qlmn896641k1es.apps.googleusercontent.com',\r\n                scope: 'email'  //Specify client information we want to receive in scope\r\n                }).then(() => {\r\n                    this.auth = window.gapi.auth2.getAuthInstance();\r\n                    this.onAuthChange(this.auth.isSignedIn.get());\r\n                    this.auth.isSignedIn.listen(this.onAuthChange);\r\n                })\r\n            })\r\n        }\r\n  onAuthChange = isSignedIn => {\r\n    if (isSignedIn) {\r\n      this.props.onSignIn(this.auth.currentUser.get().getId());\r\n    } else {\r\n      this.props.onSignOut();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  };\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  renderAuthButton = () => {\r\n    if (this.props.isSignedIn === null) {\r\n      return <div>IDK</div>;\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n          <i className=\"google icon\" />\r\n          Sign Out\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n          <i className=\"google icon\" />\r\n          Sign In With Google\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return <div>{this.renderAuthButton()}</div>;\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSignIn: id => {\r\n      dispatch(actions.signIn(id));\r\n    },\r\n    onSignOut: () => {\r\n      dispatch(actions.signOut());\r\n    }\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(GoogleAuth);\r\n\r\n//126153606708-j8nebi3oq2et374l4slmk1gghv6pq13p.apps.googleusercontent.com"]},"metadata":{},"sourceType":"module"}
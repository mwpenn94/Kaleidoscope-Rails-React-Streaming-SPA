{"ast":null,"code":"import _ from 'lodash';\nimport { FETCH_SCOPE, FETCH_SCOPES, CREATE_SCOPE, EDIT_SCOPE, DELETE_SCOPE } from '../actions/types';\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_SCOPES:\n      return { ...state,\n        ..._.mapKeys(action.payload, 'id')\n      };\n\n    case FETCH_SCOPE:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_SCOPE:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_SCOPE:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_SCOPE:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/kaleidoscope/src/reducers/scopeReducer.js"],"names":["_","FETCH_SCOPE","FETCH_SCOPES","CREATE_SCOPE","EDIT_SCOPE","DELETE_SCOPE","state","action","type","mapKeys","payload","id","omit"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,UAJF,EAKEC,YALF,QAMO,kBANP;AAQA,gBAAe,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,YAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAY,WAAGN,CAAC,CAACS,OAAF,CAAUF,MAAM,CAACG,OAAjB,EAA0B,IAA1B;AAAf,OAAP;;AACF,SAAKT,WAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACF,SAAKP,YAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACF,SAAKN,UAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACF,SAAKL,YAAL;AACE,aAAOL,CAAC,CAACY,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACG,OAArB,CAAP;;AACF;AACE,aAAOJ,KAAP;AAZJ;AAcD,CAfD","sourcesContent":["import _ from 'lodash';\r\nimport {\r\n  FETCH_SCOPE,\r\n  FETCH_SCOPES,\r\n  CREATE_SCOPE,\r\n  EDIT_SCOPE,\r\n  DELETE_SCOPE\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_SCOPES:\r\n      return { ...state, ..._.mapKeys(action.payload, 'id') };\r\n    case FETCH_SCOPE:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case CREATE_SCOPE:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case EDIT_SCOPE:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case DELETE_SCOPE:\r\n      return _.omit(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}
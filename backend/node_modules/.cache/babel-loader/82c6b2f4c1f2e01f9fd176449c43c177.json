{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/kaleidoscope/src/components/scopes/ScopeList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    //Render Edit & Delete (Administrative) Buttons\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/edit/${stream.id}`,\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/delete/${stream.id}`,\n          className: \"ui button red\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  renderList() {\n    //Map through streams from fetchStreams Action Creator\n    return this.props.streams.map(stream => {\n      return (\n        /*#__PURE__*/\n        //Semantic UI Styling and Display\n        _jsxDEV(\"div\", {\n          className: \"item\",\n          children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"large middle aligned icon camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/streams/${stream.id}`,\n              className: \"header\",\n              children: stream.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description\",\n              children: stream.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, stream.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      );\n    });\n  }\n\n  renderCreate() {\n    //Create Stream Button\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          children: \"Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), this.renderCreate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    //Returns streams in an array\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/mnt/c/Users/M/dev/flatiron/labs/kaleidoscope/kaleidoscope/src/components/scopes/ScopeList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","id","renderList","streams","map","title","description","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchStreams} from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStreams();\r\n    }\r\n\r\n    renderAdmin(stream) { //Render Edit & Delete (Administrative) Buttons\r\n        if (stream.userId === this.props.currentUserId) {\r\n            return (\r\n                <div className=\"right floated content\">\r\n                        <Link \r\n                              to={`/streams/edit/${stream.id}`} \r\n                              className=\"ui button primary\">\r\n                            Edit\r\n                        </Link>\r\n                        <Link \r\n                              to={`/streams/delete/${stream.id}`} \r\n                              className=\"ui button red\">\r\n                            Delete\r\n                        </Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        //Map through streams from fetchStreams Action Creator\r\n        return this.props.streams.map(stream => { \r\n            return( \r\n                //Semantic UI Styling and Display\r\n                <div className=\"item\" key={stream.id}>\r\n                    {this.renderAdmin(stream)} \r\n                    <i className=\"large middle aligned icon camera\" />\r\n                    <div className=\"content\">\r\n                       <Link to={`/streams/${stream.id}`} className=\"header\">\r\n                            {stream.title}  \r\n                       </Link>\r\n                        <div className=\"description\">{stream.description}</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }   \r\n\r\n    renderCreate() {    //Create Stream Button\r\n        if (this.props.isSignedIn) {\r\n            return (\r\n                <div style={{textAlign: 'right'}}>\r\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\r\n                        Create Stream\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Streams</h2>\r\n                <div className=\"ui celled list\">\r\n                {this.renderList()}\r\n                </div>\r\n                {this.renderCreate()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        streams: Object.values(state.streams), //Returns streams in an array\r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStreams})(StreamList);"]},"metadata":{},"sourceType":"module"}